#os:
#- linux
#sudo: false
#addons:
#apt:
#  # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
#  sources:
#    - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
#  packages:
#    - libstdc++6
#    - fonts-droid-fallback
#before_script:
#- git clone https://github.com/flutter/flutter.git -b beta
#- ./flutter/bin/flutter doctor
#script:
#- ./flutter/bin/flutter analyze
#- ./flutter/bin/flutter test
#cache:
#directories:
#  - $HOME/.pub-cache


jobs:
  include:

    - stage: Unit Testing
      language: generic
      os: linux
      env: running unit and widget tests with code coverage
      before_script:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        - git clone https://github.com/flutter/flutter.git -b beta
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        - pub global activate coverage
      script: flutter test --coverage
      after_success: bash <(curl -s https://codecov.io/bash) -f coverage/lcov.info

    - &integration-test-stage
      stage: Integration Testing
      sudo: true
      dist: trusty
      language: generic
      os: linux
      env: running driver on emulator
      # Run integration tests on android
      before_install:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        # Install the Android SDK Dependency.
        - export ANDROID_HOME=/opt/android-sdk-linux
        - cd /opt
        - wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        - cd -
        - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
        # Silence warning.
        - mkdir -p ~/.android
        - touch ~/.android/repositories.cfg
        # Accept licenses before installing components, no need to echo y for each component
        - yes | sdkmanager --licenses
        # Platform tools
        - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
        - sdkmanager --list | head -15
        # install older packages (for emulator)
        - sdkmanager "build-tools;28.0.3" "platforms;android-28" > /dev/null
        # Create and start emulator.
        - EMULATOR_API_LEVEL=22
        - ANDROID_ABI="default;armeabi-v7a"
        - sdkmanager "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI" > /dev/null
        - sdkmanager --list | head -15
        - echo no | avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI"
        - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader &
        # install flutter
        - git clone https://github.com/flutter/flutter.git -b beta
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        # Wait for emulator to finish startup.
        - adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
        #- ./script/android-wait-for-emulator.sh
        - adb shell input keyevent 82
        - flutter devices
      script: travis_retry flutter drive